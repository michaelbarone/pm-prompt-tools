---
description: Ensures explicit acknowledgment of which rules are being followed and which are not relevant
globs: **/*
alwaysApply: true
---

# Rule Acknowledgment and Relevance Tracking
# Ensures transparency in rule application and relevance

<rule>
name: rule_acknowledgment
description: Enforces explicit acknowledgment of rule relevance and application in responses, including dynamic updates during conversations
filters:
  - type: event
    pattern: "response_start"
  - type: content
    pattern: "(?i)(implement|change|update|modify|create|setup|configure)"
actions:
  - type: suggest
    message: |
      Please acknowledge rules at the start of your response:

      1. Initial Rule Review Structure:
         ```markdown
         ### Rule Acknowledgment

         **Relevant Rules Applied:**
         - [Rule Name]: How it's being applied
         - [Another Rule]: Specific application details

         **Rules Considered But Not Relevant:**
         [Grouped by category with brief explanation of non-relevance]

         **Implementation Following:**
         [Your implementation details...]
         ```

      2. Dynamic Update Structure (Required when new rules are considered):
         ```markdown
         ### Rule Acknowledgment Update
         [Timestamp from system]

         **Newly Considered Rules:**
         - [Rule Name]: Why it was brought in and how it's being applied
         - [Another Rule]: Its relevance and application

         **Previously Active Rules:**
         - [List of rules that were already in use]
         ```

      3. Required Components:
         - [ ] List all rules considered
         - [ ] Explicitly state which rules are being followed
         - [ ] Explain why certain rules aren't relevant
         - [ ] Reference specific sections of applied rules
         - [ ] Note any rule conflicts or priority decisions
         - [ ] Provide updates when new rules are considered
         - [ ] Maintain history of rule applications in conversation

      4. Rule Application Notes:
         - Document any rule adaptations
         - Note version-specific rule considerations
         - Highlight any rule overlap handling
         - Explain priority decisions when rules conflict
         - Track rule consideration history
         - Update acknowledgments when context changes

      5. Rule Documentation Updates:
         - Note any needed rule clarifications
         - Suggest rule improvements based on application
         - Document any rule conflicts discovered
         - Track rule effectiveness
         - Record patterns of rule usage in conversations

examples:
  - input: |
      "Initial component structure setup"
    output: |
      ### Rule Acknowledgment

      **Relevant Rules Applied:**
      - documentation-reference: Following documentation linking requirements
      - component-structure: Applying component organization standards

      **Rules Considered But Not Relevant:**
      Frontend Rules:
      - [List of rules]: Not applicable to current task

      Backend Rules:
      - [List of rules]: Not dealing with backend changes

      **Implementation Following:**
      [Component setup details...]

  - input: |
      "Adding API integration to component"
    output: |
      ### Rule Acknowledgment Update

      **Newly Considered Rules:**
      - api-standards: Now relevant for API integration
      - error-handling: Required for API error states

      **Previously Active Rules:**
      - documentation-reference
      - component-structure

      **Implementation Following:**
      [API integration details...]

metadata:
  priority: high
  version: 1.1
  tags:
    - process
    - documentation
    - rule-management
    - transparency
</rule>